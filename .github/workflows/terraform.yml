
name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        description: 'Terraform action to perform'
        default: 'production'
        type: choice
        options:
          - apply
          - destroy
        required: true
  push:
    branches: [ "main" ]
 

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_ACCES_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCES_KEY }}
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    # verify AWS credentials for the GitHub Actions runner
    - name: Verify AWS Identity
      run: aws sts get-caller-identity

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.11.4

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init


    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: ${{ github.event.inputs.terraform_action == 'apply' }}
      run: terraform apply -auto-approve 

    - name: Terraform Destroy
      if: ${{ github.event.inputs.terraform_action == 'destroy' }}
      run: terraform destroy -auto-approve 

